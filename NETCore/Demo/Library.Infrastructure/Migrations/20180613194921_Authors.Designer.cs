// <auto-generated />
using Demo.Library.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo.Library.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20180613194921_Authors")]
    partial class Authors
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Demo.Library.Business.Authors.EF.Author", b =>
                {
                    b.Property<int>("IdAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAuthor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAuthorNationality")
                        .HasColumnName("idAuthorNationality")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(30);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasMaxLength(50);

                    b.HasKey("IdAuthor");

                    b.HasIndex("IdAuthorNationality");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Demo.Library.Business.Authors.EF.AuthorNationality", b =>
                {
                    b.Property<int>("IdAuthorNationality")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAuthorNationality")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(70);

                    b.HasKey("IdAuthorNationality");

                    b.ToTable("AuthorNationality");
                });

            modelBuilder.Entity("PROTR.Core.Security.EF.AppUser", b =>
                {
                    b.Property<int>("IdAppUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAppUser")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deactivated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deactivated")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(400);

                    b.Property<bool>("Su")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("su")
                        .HasDefaultValue(false);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasMaxLength(50);

                    b.HasKey("IdAppUser");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("Demo.Library.Business.Authors.EF.Author", b =>
                {
                    b.HasOne("Demo.Library.Business.Authors.EF.AuthorNationality", "AuthorNationality")
                        .WithMany("Authors")
                        .HasForeignKey("IdAuthorNationality")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
